<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- FOR MY ACTUAL PROJECT -->

	<!-- Marshaller used -->
	<bean id="basicMarshaller" class="fr.cekogha.marshaller.BasicMarshaller">
	</bean>

	<!-- Converter Mongo used -->
	<!-- <bean id="mongoConverter" class="fr.cekogha.model.converter.UserConverter">
	</bean> -->

	<!-- BusinessServices used -->
	<bean id="basicBusinessServices" class="fr.cekogha.services.BasicBusinessServices">
		<property name="marshaller" ref="basicMarshaller" />
		<property name="usersCollection" value="${mongo.collection.users}" />
		<property name="mongoTemplate" ref="mongoTemplate" />
	</bean>

	<bean id="jsonFileItemReader" class="fr.cekogha.steps.uploadData.JsonFileItemReader"
		scope="step">
		<property name="inputDataFile" value="#{JobParameters['parameters.input.data']}" />
	</bean>

	<bean id="jsonFileItemWriter" class="fr.cekogha.steps.uploadData.JsonFileItemWriter"
		scope="step">
		<property name="usersCollection" value="${mongo.collection.users}" />
		<property name="mongoTemplate" ref="mongoTemplate" />
	</bean>

	<bean id="jsonFileProcessor" class="fr.cekogha.steps.uploadData.JsonFileProcessor"
		scope="step">
		<property name="marshaller" ref="basicMarshaller" />
	</bean>



	<!-- FROM A PROJECT TEST -->
	<!-- <bean id="cvsFileItemReader" name="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"> 
		<property name="resource" value="classpath:cvs/input/report.csv" /> <property 
		name="lineMapper"> <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper"> 
		<property name="lineTokenizer"> <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer"> 
		<property name="names" value="id,sales,qty,staffName,date" /> </bean> </property> 
		<property name="fieldSetMapper"> <bean class="com.mkyong.ReportFieldSetMapper" 
		/> if no data type conversion, use BeanWrapperFieldSetMapper to map by name 
		<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper"> 
		<property name="prototypeBeanName" value="report" /> </bean> </property> 
		</bean> </property> </bean> -->

	<!-- <bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter"> 
		<property name="resource" value="file:xml/outputs/report.xml" /> <property 
		name="marshaller" ref="reportMarshaller" /> <property name="rootTagName" 
		value="report" /> </bean> <bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller"> 
		<property name="classesToBeBound"> <list> <value>com.mkyong.model.Report</value> 
		</list> </property> </bean> -->


</beans>